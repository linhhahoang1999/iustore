# Generated by Django 3.2.3 on 2021-06-04 05:40

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=255, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=255, null=True)),
            ],
            options={
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('city', models.CharField(blank=True, db_column='City', max_length=255, null=True)),
                ('district', models.CharField(blank=True, db_column='District', max_length=255, null=True)),
                ('ward', models.CharField(blank=True, db_column='Ward', max_length=255, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'attribute',
            },
        ),
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('attribute', models.ForeignKey(db_column='AttributeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='mystore.attribute')),
            ],
            options={
                'db_table': 'attribute_type',
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('logo', models.CharField(blank=True, db_column='Logo', max_length=255, null=True)),
            ],
            options={
                'db_table': 'bank',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('is_order', models.TextField(db_column='Is_order')),
            ],
            options={
                'db_table': 'cart',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='content', max_length=255, null=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=255, null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='Updated_date', default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('from_date', models.DateTimeField(blank=True, db_column='From_date', null=True)),
                ('to_date', models.DateTimeField(blank=True, db_column='To_date', null=True)),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='ImportFile',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(blank=True, db_column='Created_date', default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'import_file',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('dob', models.DateField(blank=True, db_column='Dob', null=True)),
                ('gender', models.IntegerField(db_column='Gender')),
                ('avatar', models.CharField(blank=True, db_column='Avatar', max_length=255, null=True)),
                ('account', models.ForeignKey(db_column='AccountID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.account')),
                ('address', models.ForeignKey(db_column='AddressID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.address')),
            ],
            options={
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(blank=True, db_column='Created_date', default=datetime.datetime.now)),
                ('cart', models.ForeignKey(blank=True, db_column='CartID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.cart')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('method_name', models.CharField(blank=True, db_column='Method_name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'payment_method',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('level', models.IntegerField(db_column='Level')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
            ],
            options={
                'db_table': 'permission',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('price', models.BigIntegerField(db_column='Price')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('qty_in_stock', models.IntegerField(db_column='Qty_in_stock')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('fee', models.FloatField(db_column='Fee')),
            ],
            options={
                'db_table': 'shipment',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('logo', models.CharField(blank=True, db_column='Logo', max_length=255, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=255, null=True)),
                ('desc', models.CharField(blank=True, db_column='Desc', max_length=255, null=True)),
            ],
            options={
                'db_table': 'shop',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=255, null=True)),
            ],
            options={
                'db_table': 'warehouse',
            },
        ),
        migrations.CreateModel(
            name='WarehouseStaff',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('import_file', models.ForeignKey(db_column='Import_fileID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.importfile')),
                ('member', models.ForeignKey(db_column='memberID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.member')),
            ],
            options={
                'db_table': 'warehouse_staff',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='content', max_length=255, null=True)),
                ('attributes', models.ManyToManyField(through='mystore.AttributeType', to='mystore.Attribute')),
                ('category', models.ForeignKey(db_column='CategoryID', null=True, on_delete=django.db.models.deletion.CASCADE, to='mystore.category')),
            ],
            options={
                'db_table': 'type',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('no', models.CharField(blank=True, db_column='No', max_length=255, null=True)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=255, null=True)),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.product')),
            ],
            options={
                'db_table': 'tax',
            },
        ),
        migrations.CreateModel(
            name='Shipper',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('member', models.ForeignKey(db_column='memberID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.member')),
            ],
            options={
                'db_table': 'shipper',
            },
        ),
        migrations.CreateModel(
            name='ShipmentMethod',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('method_name', models.CharField(blank=True, db_column='Method_name', max_length=255, null=True)),
                ('duration', models.IntegerField(db_column='Duration')),
                ('fee', models.FloatField(db_column='Fee')),
                ('shipment', models.ForeignKey(db_column='ShipmentID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.shipment')),
            ],
            options={
                'db_table': 'shipment_method',
            },
        ),
        migrations.AddField(
            model_name='shipment',
            name='shipper',
            field=models.ForeignKey(db_column='ShipperID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.shipper'),
        ),
        migrations.CreateModel(
            name='SalerStaff',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('member', models.ForeignKey(db_column='memberID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.member')),
            ],
            options={
                'db_table': 'saler_staff',
            },
        ),
        migrations.CreateModel(
            name='Respone',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=255, null=True)),
                ('created_date', models.DateTimeField(blank=True, db_column='Created_date', null=True)),
                ('updated_date', models.DateTimeField(blank=True, db_column='Updated_date', default=datetime.datetime.now)),
                ('comment', models.ForeignKey(db_column='CommentID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.comment')),
            ],
            options={
                'db_table': 'respone',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='type',
            field=models.ForeignKey(db_column='TypeID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.type'),
        ),
        migrations.AddField(
            model_name='product',
            name='warehouse',
            field=models.ForeignKey(db_column='WarehouseID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.warehouse'),
        ),
        migrations.CreateModel(
            name='PaymentDetail',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('card', models.CharField(blank=True, db_column='Card', max_length=255, null=True)),
                ('bank', models.ForeignKey(db_column='bankID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.bank')),
                ('customer', models.ForeignKey(db_column='CustomerID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.customer')),
            ],
            options={
                'db_table': 'payment_detail',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('order', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.order')),
                ('paymentmethod', models.ForeignKey(db_column='PaymentMethodID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.paymentmethod')),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
                ('order', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.order')),
                ('saler_staff', models.ForeignKey(db_column='Saler_staffID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.salerstaff')),
            ],
            options={
                'db_table': 'order_history',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='shipment',
            field=models.ForeignKey(db_column='ShipmentID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.shipment'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, db_column='content', max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, db_column='time', null=True)),
                ('customer', models.ForeignKey(db_column='customerID', on_delete=django.db.models.deletion.CASCADE, to='mystore.customer')),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('price', models.BigIntegerField(db_column='Price')),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.product')),
            ],
            options={
                'db_table': 'item',
            },
        ),
        migrations.CreateModel(
            name='ImportProduct',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('qty', models.IntegerField(db_column='Qty')),
                ('import_file', models.ForeignKey(db_column='Import_fileID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.importfile')),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.product')),
            ],
            options={
                'db_table': 'import_product',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('caption', models.CharField(blank=True, db_column='Caption', max_length=255, null=True)),
                ('path', models.CharField(blank=True, db_column='Path', max_length=255, null=True)),
                ('product', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.product')),
            ],
            options={
                'db_table': 'image',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('liked', models.IntegerField(db_column='Liked')),
                ('rate_score', models.IntegerField(db_column='Rate_score')),
                ('created_date', models.DateTimeField(blank=True, db_column='Created_date', default=datetime.datetime.now)),
                ('comment', models.ForeignKey(db_column='CommentID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.comment')),
                ('item', models.ForeignKey(db_column='ItemID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.item')),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('discount_value', models.FloatField(db_column='Discount_value')),
                ('from_date', models.DateTimeField(blank=True, db_column='From_date', null=True)),
                ('to_date', models.DateTimeField(blank=True, db_column='To_date', null=True)),
                ('item', models.ForeignKey(db_column='ItemID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.item')),
            ],
            options={
                'db_table': 'discount',
            },
        ),
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('receiver', models.CharField(blank=True, db_column='Receiver', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=255, null=True)),
                ('address', models.ForeignKey(db_column='AddressID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.address')),
                ('customer', models.ForeignKey(db_column='CustomerID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.customer')),
                ('order', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.order')),
            ],
            options={
                'db_table': 'delivery_address',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='member',
            field=models.ForeignKey(db_column='memberID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.member'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('qty', models.IntegerField(db_column='Qty')),
                ('cart', models.ForeignKey(db_column='CartID', on_delete=django.db.models.deletion.CASCADE, to='mystore.cart')),
                ('item', models.ForeignKey(db_column='ItemID', on_delete=django.db.models.deletion.CASCADE, to='mystore.item')),
            ],
            options={
                'db_table': 'cart_item',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='customer',
            field=models.ForeignKey(db_column='CustomerID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.customer'),
        ),
        migrations.CreateModel(
            name='BussinessStaff',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('member', models.ForeignKey(db_column='memberID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.member')),
            ],
            options={
                'db_table': 'bussiness_staff',
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('company', models.CharField(blank=True, db_column='Company', max_length=255, null=True)),
                ('tax_code', models.CharField(blank=True, db_column='Tax_code', max_length=255, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('order', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.order')),
            ],
            options={
                'db_table': 'bill',
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, db_column='value', max_length=255, null=True)),
                ('attribute', models.ForeignKey(db_column='AttributeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='mystore.attribute')),
                ('product', models.ForeignKey(db_column='ProductID', null=True, on_delete=django.db.models.deletion.CASCADE, to='mystore.product')),
            ],
            options={
                'db_table': 'attribute_value',
            },
        ),
        migrations.AddField(
            model_name='attributetype',
            name='type',
            field=models.ForeignKey(db_column='TypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='mystore.type'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='types',
            field=models.ManyToManyField(through='mystore.AttributeType', to='mystore.Type'),
        ),
        migrations.AddField(
            model_name='account',
            name='permission',
            field=models.ForeignKey(db_column='PermissionID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.permission'),
        ),
        migrations.CreateModel(
            name='PaymentmethodBank',
            fields=[
                ('paymentmethod', models.OneToOneField(db_column='PaymentMethodID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='mystore.paymentmethod')),
                ('bank', models.ForeignKey(db_column='bankID', on_delete=django.db.models.deletion.DO_NOTHING, to='mystore.bank')),
            ],
            options={
                'db_table': 'paymentmethod_bank',
                'unique_together': {('paymentmethod', 'bank')},
            },
        ),
    ]
